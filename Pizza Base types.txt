 Select your size & crust :- 
------------------------------------
Personal (Serves 1-2) 
           1. Soft Pan 
            Crunchy on the outside, soft & fluffy on the inside - ₹299
            2. Stuffed Crust - Cheese Maxx (Serves 2-3)
            Cheese lovers paradise! Crust stuffed with cheese & creamy Peruvian sauce - ₹399 
           
            3. Sausage Crust:
            Flavorful sausage-infused crust, bursting with taste, creates a delightful blend of meatiness and perfect dough - ₹499

            4. Crispy Thin Crust:
            Thin and delicate, our crispy crust offers a light crunch, enhancing the pizza with a focus on rich topping flavors ₹299

            5. Sausage and Cheese Stuffed Crust:
            Dive into a cheesy paradise with our stuffed crust, generously filled with sausage and creamy cheese, delivering a rich, delightful taste ₹499

------------------
Medium (Serves 2-3) 
           1. Soft Pan 
            Crunchy on the outside, soft & fluffy on the inside - ₹299

            2. Stuffed Crust - Cheese Maxx (Serves 2-3)
            Cheese lovers paradise! Crust stuffed with cheese & creamy Peruvian sauce - ₹399 
           
            3. Sausage Crust:
            Flavorful sausage-infused crust, bursting with taste, creates a delightful blend of meatiness and perfect dough - ₹349

            4. Crispy Thin Crust:
            Thin and delicate, our crispy crust offers a light crunch, enhancing the pizza with a focus on rich topping flavors ₹399

            5. Sausage and Cheese Stuffed Crust:
            Dive into a cheesy paradise with our stuffed crust, generously filled with sausage and creamy cheese, delivering a rich, delightful taste ₹419

*********************************************************
(if you remove one topping from orignal pizza then you also add new Veggie instead of this topping.)

---------------
Choice a Cheese :-
---------------
* Mozzarella cheese
* Cheddar cheese
* Parmesan cheese 

--------------
Sauce Types :- 
------------
1.)Classic Tomato Sauce
2.)Pesto Sauce
3.)Alfredo Sauce
4.)Grill Sauce
5.)White Sauce (Garlic and Olive Oil)


Change your toppings:
   (warning :- You can only remove 1 topping from this pizza recipe.) 

-------------------------------
   (warning :- You can only add 2 Veggies out of All Optional Veggies.)

-------------------- 
Add something extra:
--------------------
Black Olives
Jalapeno
Sweet Corn
MushroomBlack Olives - ₹40
Green Capsicum -₹40
Herbed Veggies -₹40
Jalapeno - ₹40
Spiced Paneer
Mushroom
Onion
Red Capsicum
Red Paprika
Sweet Corn
Tomato
Baby Corn


https://chat.openai.com/c/18893fa7-ee3c-4eb0-a139-899e21e69bb0




Absolutely, you've got the right idea! Let's break it down step by step:

Admin Login:

Create a special login page for admins. Only authorized admins can access it.
Admin Dashboard:

Admins log in to a dashboard where they can see the current quantities of crust, sauce, cheese, and toppings. It's like a control center for ingredients.
Managing Ingredients:

Admins can easily change the quantity of each ingredient. If they see they're running low, they can add more.
Adding New Items:

Admins have the power to introduce new items. If there's a new type of crust or sauce, they can add it to the menu.
Order Notification:

When a user places an order, admins get a notification. They can quickly check the available ingredients before confirming the order.
Order Status Update:

After the pizza is in the oven or out for delivery, admins update the status in their dashboard. This change is then reflected in real-time on the user's dashboard.
By implementing these features, you're creating a smooth process for admins to manage ingredients, stay on top of orders, and update the status for users to track. It's a user-friendly and efficient system for both administrators and customers.


// User Schema
const userSchema = new mongoose.Schema({
  username: String,
  email: String,
  password: String,
  registrationDate: { type: Date, default: Date.now }
});

// Admin Schema
const adminSchema = new mongoose.Schema({
  username: String,
  email: String,
  password: String
});

// Ingredient Schema
const ingredientSchema = new mongoose.Schema({
  name: String,
  quantityAvailable: Number,
  unitPrice: Number
});

// Order Schema
const orderSchema = new mongoose.Schema({
  userID: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
  orderDate: { type: Date, default: Date.now },
  status: String
});

// Pizza Schema
const pizzaSchema = new mongoose.Schema({
  orderID: { type: mongoose.Schema.Types.ObjectId, ref: 'Order' },
  base: String,
  sauce: String,
  cheese: String,
  status: String,
  toppings: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Topping' }]
});

// Topping Schema
const toppingSchema = new mongoose.Schema({
  name: String
});

// Model definitions
const User = mongoose.model('User', userSchema);
const Admin = mongoose.model('Admin', adminSchema);
const Ingredient = mongoose.model('Ingredient', ingredientSchema);
const Order = mongoose.model('Order', orderSchema);
const Pizza = mongoose.model('Pizza', pizzaSchema);
const Topping = mongoose.model('Topping', toppingSchema);
